<?php

namespace Ecomteck\StorePickup\Controller\Index;

use Magento\Framework\View\Result\PageFactory;

class Index extends \Magento\Framework\App\Action\Action
{

    protected $resultPageFactory;
    protected $request;
    protected $resultRedirectFactory;
	protected $_checkoutSession;
	protected $_scopeConfig;

    public function __construct(
        \Magento\Framework\App\Request\Http $request, \Magento\Framework\App\Action\Context $context, PageFactory $resultPageFactory, \Magento\Framework\Controller\Result\RedirectFactory $resultRedirectFactory,
		\Magento\Checkout\Model\Session $_checkoutSession,
		\Magento\Framework\App\Config\ScopeConfigInterface $scopeConfig
    ) {
        $this->request           = $request;
        $this->resultPageFactory = $resultPageFactory;
		$this->resultRedirectFactory = $resultRedirectFactory;
		$this->_checkoutSession  = $_checkoutSession;
		$this->_scopeConfig  = $scopeConfig;
        parent::__construct($context);
    }

    public function execute()
    {
		$quote = $this->_checkoutSession->getQuote();
		$pickup_store = $quote->getPickupStore();
		$noFitment = $this->_checkoutSession->getIsFitmentData();
		$noFitmentPickupStoreId = $this->_scopeConfig->getValue('carttostorepickup/general/no_fitment_installer', \Magento\Store\Model\ScopeInterface::SCOPE_STORE);
		
		if($noFitmentPickupStoreId && ($pickup_store == $noFitmentPickupStoreId)){
			$resultRedirect = $this->resultRedirectFactory->create();
			$resultRedirect->setPath('checkout');
			return $resultRedirect;
		}/* else if($noFitment == 0){
			$resultRedirect = $this->resultRedirectFactory->create();
			$resultRedirect->setPath('checkout');
			return $resultRedirect;
		} */
		else{
			$this->_view->loadLayout();
			$resultPage = $this->resultPageFactory->create();
			return $resultPage;
			$this->_view->renderLayout();
		}
    }

}
